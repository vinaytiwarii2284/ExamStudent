@model ExamStudent.Models.Tab_User_Info_Temp

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutUserPanel.cshtml";
}


<div class="container">
    <h4>Student Edit</h4>
    <hr />


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
               
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">
                <label>Email Address</label>
               
                
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">

                    <label>Mobile Number</label>
                               
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label " })
              
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
               
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                
            </div>

          

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label " })
               
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
               
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.StateID, "StateID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.CityID, "CityID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Block, htmlAttributes: new { @class = "control-label " })
              
                    @Html.EditorFor(model => model.Block, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                    @Html.ValidationMessageFor(model => model.Block, "", new { @class = "text-danger" })
               
            </div>
          
            @*<div class="form-group">
                @Html.LabelFor(model => model.BoardTypeID, "BoardTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BoardTypeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BoardTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MediumID, "MediumID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("MediumID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MediumID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StandardID, "StandardID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("StandardID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StandardID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
       
    }


</div>





<br />
<br />
<br />

