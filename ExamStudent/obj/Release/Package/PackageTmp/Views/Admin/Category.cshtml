@model ExamStudent.ViewModels.QuizCategoryViewModel

@{
    ViewBag.Title = "Category";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}



<script type="text/javascript">
    $(document).ready(function () {
        $('#BoardTypeID').change(function () {
            //alert($('#BoardTypeName').val());
            $.ajax({
                type: "post",
                url: "/Admin/GetMediums",
                data: { BoardTypeId: $('#BoardTypeID').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    //debugger;
                    //alert("bind data now");
                    var district = "<select id='MediumID'>";
                    district = district + '<option value="">--Select--</option>';

                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#MediumID').html(district);
                }
            });
        });

        $('#MediumID').change(function () {

            //alert($('#Mediumname').val());

            $.ajax({
                type: "post",
                url: "/Admin/GetStandard",
                data: { MediumId: $('#MediumID').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {

                    var district = "<select id='StandardID'>";
                    district = district + '<option value="">--Select--</option>';

                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#StandardID').html(district);
                }
            });
        });
    });
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 class="display-4 text-center">Category</h4>
    <hr />


    @if (ViewBag.IsSuccess)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Congratulations</strong> You Should added new Category Successfuly.<br />
            Click <a>Here</a> View The Category details.
            <button type="button" class="close" data-dismiss="alert" aria-label="close">
                <span aria-hidden="true">&times;</span>
            </button>

        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.BoardTypeID, "BoardTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(m => m.BoardTypeID, new SelectList(Model.BoardTypeList, "BoardTypeId", "BoardTypeName"), "--Select BoardType Name-- ",
                                    new { @class = "form-control " })

            @Html.ValidationMessageFor(model => model.BoardTypeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MediumID, "MediumID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(m => m.MediumID, new SelectList(Model.MediumList, "MediumId", "MediumName"), "--Select Medium Name-- ",
                                        new { @class = "form-control " })

            @Html.ValidationMessageFor(model => model.MediumID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StandardID, "StandardID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(m => m.StandardID, new SelectList(Model.StandardList, "StandardId", "StandardName"), "--Select Standard Name-- ",
                                       new { @class = "form-control " })

            @Html.ValidationMessageFor(model => model.StandardID, "", new { @class = "text-danger" })
        </div>
    </div>




    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Category_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Category_Name, new { htmlAttributes = new { @class = "form-control col-md-5" } })
            @Html.ValidationMessageFor(model => model.Category_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.AdminID, "AdminID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AdminID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AdminID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div style="overflow : scroll">
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>ID</th>
                <th>Cattegory Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewData["list"] as List<ExamStudent.Models.Category>)
            {
                <tr>
                    <td>@item.Category_ID</td>
                    <td>@item.Category_Name</td>
                </tr>
            }
        </tbody>
    </table>
</div>
