@model ExamStudent.ViewModels.QuizQuestionViewModel

@{
    ViewBag.Title = "AddQuestion";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<script src="/Scripts/jquery-3.3.1.js"></script>

<h2 class="text-center text-dark display-4" style="background: #0094ff ;color:#ffffff">Add Question</h2>



<script type="text/javascript">
    $(document).ready(function () {
        $('#BoardTypeID').change(function () {
            //alert($('#BoardTypeName').val());
            $.ajax({
                type: "post",
                url: "/Admin/GetMediumss",
                data: { BoardTypeId: $('#BoardTypeID').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    //debugger;
                    //alert("bind data now");
                    var district = "<select id='MediumID'>";
                    district = district + '<option value="">--Select--</option>';

                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#MediumID').html(district);
                }
            });
        });

        $('#MediumID').change(function () {

            //alert($('#Mediumname').val());

            $.ajax({
                type: "post",
                url: "/Admin/GetStandardd",
                data: { MediumId: $('#MediumID').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {

                    var district = "<select id='StandardID'>";
                    district = district + '<option value="">--Select--</option>';

                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#StandardID').html(district);
                }
            });
        });

        $('#StandardID').change(function () {

            //alert($('#Mediumname').val());

            $.ajax({
                type: "post",
                url: '@Url.Action("GetCategory", "Admin")',
                data: { StandardId: $('#StandardID').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {

                    var district = "<select id='Category_ID'>";
                    district = district + '<option value="">--Select--</option>';

                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#Category_ID').html(district);
                }
            });
        });
    });
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<h1 style="color: darkgreen">@TempData["Message"]</h1>

    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.BoardTypeID, "BoardTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(m => m.BoardTypeID, new SelectList(Model.BoardTypeList, "BoardTypeId", "BoardTypeName"), "--Select BoardType Name-- ",
                                        new { @class = "form-control " })

                @Html.ValidationMessageFor(model => model.BoardTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MediumID, "MediumID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(m => m.MediumID, new SelectList(Model.MediumList, "MediumId", "MediumName"), "--Select Medium Name-- ",
                                            new { @class = "form-control " })

                @Html.ValidationMessageFor(model => model.MediumID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StandardID, "StandardID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(m => m.StandardID, new SelectList(Model.StandardList, "StandardId", "StandardName"), "--Select Standard Name-- ",
                                           new { @class = "form-control " })

                @Html.ValidationMessageFor(model => model.StandardID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Category_ID, "Category_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(m => m.Category_ID, new SelectList(Model.CategoryList, "Category_ID", "Category_Name"), "--Select Category Name-- ",
                                          new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.Category_ID, "", new { @class = "text-danger" })
            </div>
        </div>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Question1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Question1, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                @Html.ValidationMessageFor(model => model.Question1, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.CorrectOptionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.CorrectOptionId, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                @Html.ValidationMessageFor(model => model.CorrectOptionId, "", new { @class = "text-danger" })
            </div>
        </div>*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Question" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div style="overflow : scroll">
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>ID</th>
                <th>Question Name</th>
               
                @*<th>Correct Option</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewData["Questons"] as List<ExamStudent.Models.Question>)
            {
            <tr>
                <td>@item.Question_Id</td>
                <td>@item.Question1</td>
               
                @*<td>@item.CorrectOptionId</td>*@
               

            </tr>
            }
        </tbody>
    </table>
</div>
